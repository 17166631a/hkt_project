{"version":3,"sources":["components/SearchBar/HKT.png","components/LoginPage/HKT.png","components/ImportPage/types.js","components/OrderList/OrderList.js","components/WorkItemsPage/WorkItemsPage.js","components/LoginPage/LoginPage.js","components/NavBar/HKTCSNav.js","components/NavBar/ETNav.js","components/NavBar/AdminNav.js","components/NavBar/NavBar.js","components/PageHeader/PageHeader.js","components/SearchBar/SearchBar.js","components/ImportPage/MakeColumns.js","components/ImportPage/ImportPage.js","components/QuotationPage/QuotationPage.js","components/TeamsPage/TeamsPage.js","components/UserProfilePage/UserProfilePage.js","components/UploadPage/UploadPage.js","components/OrderList/OrderDetails/OrderDetails.js","components/QuotationDetails/QuotationDetails.js","components/MainView/MainView.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","x","join","orderObjects","workitem_type","userObject","username","userType","LoginPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","validateUser","_","fetch","concat","serverPath","state","password","then","res","json","console","log","data","length","user_type","isAuthenticated","errorMessage","catch","err","onSubmit","preventDefault","react_default","a","createElement","Redirect","to","pathname","className","src","logo","alt","type","placeholder","Fragment","Component","HKTCSNav","_this2","onClick","items","logout","ETNav","AdminNav","NavBar","NavBar_HKTCSNav","NavBar_ETNav","NavBar_AdminNav","PageHeader","pageName","SearchBar","keyword","find","searchField","findForET","selectOnChange","onBlur","switchField","pageType","HKTLogo","width","OrderList","getETOrders","userDetails","team_id","forEach","toConsumableArray","getOrders","checkPink","objectSpread","color","backgroundColor","checkGrey","total_grey","pvDate_past","countDaysPast","Date","pre_visit_date","slice","wDate_past","wiring_date","order_status","pending_reason_id","getDelayDays","delay_days","id","reason_id","startDate","holidays","endDate","setHours","diff","days","Math","ceil","floor","startDay","getDay","endDay","d0","getFullYear","getMonth","getDate","d1","i","findETOrders","field","undefined","push","stateCopy","assign","findOrders","appendorderObjects","tr","td","j","_loop","key","style","order_number","BSN","appendDate","assigning_date","date","keyfactor","d","yyyy","mm","dd","components_SearchBar_SearchBar","components_PageHeader_PageHeader","border","make_cols","refstr","o","C","XLSX","utils","decode_range","c","encode_col","ImportPage","handleChange","files","file","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","sheet_to_json","cols","JSON","stringify","updateLog","showSuccess","readAsArrayBuffer","accept","SheetJSFT","quotationObjects","QuotationPage","getQuotations","totalQuotations","appendQuotationObjects","yyyyddmm","submition_date","hh","parseInt","mmss","quotation_id","quotationIndex","TeamsPage","UserProfilePage","getUserDetails","ut","staff_id","email","tel","upload_date","getHours","getMinutes","getSeconds","UploadPage","componentWillMount","getItemID","workitems","orderNumOnChange","OrderNum","itemObjects","itemID","Description","Unit","UnitRate","Qty","itemOnchange","s","description","unit","unit_rate","qtyOnChange","closeToast","isConfirming","orderNumInvalid","itemInvalid","workItemRows","insertQuotationForm","uploadSuccess","Remarks","addRowOnClick","renderItemID","w","options","work_item_id","Exception","renderMoreRows","rows","defaultValue","readOnly","parseFloat","toFixed","renderTotalAmount","txt","totalAmount","htmlFor","role","aria-live","aria-atomic","data-dismiss","aria-label","aria-hidden","WorkItemsPage","findItems","ATGitems","totalItems","getitems","response","IBIitems","appendItems","t","class","ts","pendingReason","OrderDetails","getPendingReason","orderIndex","editOnClick","editing","closeEditOnClick","isSuccess","_this$setState","editTypeOnchange","editType","selectedReason","statusOnChange","onConfirm","isPending","getModifiedValue","getOriginalValue","today","String","padStart","hour","minutes","seconds","original_data","modified_data","isFail","getUpdateLog","getReasonsList","reasons","renderLog","u","editor","remarks","reasonOnChange","renderReasons","r","QuotationDetails","createAndDownloadPDF","axios","post","get","responseType","pdfBlob","Blob","saveAs","getItemCase","q","itemCasesObjects","getItemDetails","renderMoreItemCases","ic","colSpan","item_qty","MainView","navOnClick","orderOnClick","index","quotationOnClick","orders","es_Redirect","components_NavBar_NavBar","components_OrderList_OrderList","components_ImportPage_ImportPage","components_QuotationPage_QuotationPage","components_TeamsPage_TeamsPage","OrderList_OrderDetails_OrderDetails","components_QuotationDetails_QuotationDetails","components_UserProfilePage_UserProfilePage","components_UploadPage_UploadPage","components_WorkItemsPage_WorkItemsPage","Routes","BrowserRouter","Switch","Route","exact","path","component","App","src_Routes","Boolean","window","location","hostname","match","__webpack_exports__","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.215f5abd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HKT.e1200baf.png\";","module.exports = __webpack_public_path__ + \"static/media/HKT.e1200baf.png\";","const SheetJSFT = [\r\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function(x) { return \".\" + x; }).join(\",\");","import React, { Component } from 'react';\r\nimport './OrderList.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport { serverPath } from '../..';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport { userObject, userType } from '../LoginPage/LoginPage';\r\n\r\nexport let orderObjects;\r\nexport let totalOrders;\r\n\r\nclass OrderList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Orders',\r\n            orderObjects: [],\r\n            delay_days: 0,\r\n            userDetails: {}\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(userType==='admin' || userType==='hktcs')\r\n        this.getOrders();\r\n        else\r\n        this.getETOrders();\r\n        console.log(this.state.orderObjects);\r\n    }\r\n\r\n    // get orders belong to this team only (for engineering team view)\r\n    getETOrders = _ => {\r\n        console.log(\"getETOrders\");\r\n        orderObjects = [];\r\n        this.setState({\r\n            orderObjects:[]\r\n        },()=>{\r\n            fetch(`http://localhost:8080/users/et_details?username=${userObject.username}`)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.setState({\r\n                    userDetails: res.data[0]\r\n                },()=>{\r\n                    fetch(`${serverPath}/orders/find?field=team_id&keyword=${this.state.userDetails.team_id}`)\r\n                    .then(res=>res.json())\r\n                    .then(res=>{\r\n                        (res.data).forEach(e=>{\r\n                            orderObjects = [...this.state.orderObjects,e];\r\n                            this.setState({\r\n                                orderObjects: [...this.state.orderObjects,e]\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n        })\r\n    }\r\n\r\n    // get all orders\r\n    getOrders = _ => {\r\n        orderObjects = [];\r\n        this.setState({\r\n            orderObjects:[]\r\n        },()=>{\r\n          fetch(`${serverPath}/orders`)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            // get pink orders (HKT requirment)\r\n            // case1 Today>=(pre visit date + 2 working days) & (status == assigned) & (wiring_date = null)\r\n            // case2 Today>=(pre visit date + 2 working days) & (pending reason_id == 2)\r\n            // case3 Toady>=(wiring date + 2 working days) & (pending reason_id = 3)\r\n            (res.data).forEach(e => {\r\n                if(this.checkPink(e)){\r\n                    e={...e,color:{backgroundColor:\"pink\"}};\r\n                    orderObjects = [...this.state.orderObjects,e];\r\n                      this.setState({\r\n                        orderObjects: [...this.state.orderObjects,e]\r\n                    }, ()=>console.log(this.state.orderObjects))\r\n                }\r\n            });\r\n\r\n            // get grey orders (HKT requirement)\r\n            (res.data).forEach(e => {\r\n                if(this.checkGrey(e)){\r\n                    e={...e,color:{backgroundColor:\"#CDCDCD\"}};\r\n                    orderObjects = [...this.state.orderObjects,e];\r\n                    this.setState({\r\n                        orderObjects: [...this.state.orderObjects,e]\r\n                    }, ()=>console.log(this.state.total_grey))\r\n                }\r\n            });\r\n\r\n            // get non-colored orders \r\n            (res.data).forEach(e => {\r\n                if(!this.checkPink(e)&&!this.checkGrey(e)){\r\n                    orderObjects = [...this.state.orderObjects,e];\r\n                    this.setState({\r\n                        orderObjects: [...this.state.orderObjects,e]\r\n                    }, ()=>console.log(this.state.orderObjects))\r\n                }   \r\n            });\r\n            \r\n          })\r\n          .catch(err => console.log(err))\r\n        })\r\n    } // get orders from db\r\n\r\n    checkPink = e =>{\r\n        let pvDate_past = this.countDaysPast(new Date(e.pre_visit_date.slice(0,10)));\r\n        let wDate_past = this.countDaysPast(new Date(e.wiring_date.slice(0,10)));\r\n        if((\r\n            (((e.order_status===\"Assigned\"&&e.wiring_date===\"0000-00-00\")||e.pending_reason_id===2)&&pvDate_past>=2) || // case1+2\r\n            (e.pending_reason_id===3 && wDate_past>=2)) && // case3\r\n            e.order_status!==\"Completed\"){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    checkGrey = e =>{\r\n        let pvDate_past = this.countDaysPast(new Date(e.pre_visit_date.slice(0,10)));\r\n        if(e.pending_reason_id>=14 && e.pending_reason_id<=22){\r\n            this.getDelayDays(e.pending_reason_id);\r\n            if(pvDate_past>=this.state.delay_days && e.order_status!==\"Completed\"){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getDelayDays = id => {\r\n        fetch(`${serverPath}/reasons`)\r\n          .then(res=>res.json())\r\n          .then(res=>{\r\n            (res.data).forEach(e=>{\r\n                if(e.reason_id===id){\r\n                    this.setState({\r\n                        delay_days: e.delay_days\r\n                    })\r\n                }\r\n            })\r\n          })\r\n          .catch(err=>console.log(err))\r\n    }\r\n\r\n    countDaysPast = startDate => {\r\n        let holidays = [];\r\n        // get holidays\r\n        fetch(`${serverPath}/holidays`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n          holidays = res.data\r\n        })\r\n        .catch(err=>console.log(err))\r\n  \r\n        let endDate = new Date();\r\n        // validation\r\n        if(endDate < startDate){\r\n          return 0\r\n        }\r\n        // Calculate days between dates\r\n        var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n        startDate.setHours(0,0,0,1);  // Start just after midnight\r\n        endDate.setHours(23,59,59,999);  // End just before midnight\r\n        var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n        var days = Math.ceil(diff / millisecondsPerDay);\r\n        \r\n        // Subtract two weekend days for every week in between\r\n        var weeks = Math.floor(days / 7);\r\n        days -= weeks * 2;\r\n  \r\n        // Handle special cases\r\n        var startDay = startDate.getDay();\r\n        var endDay = endDate.getDay();\r\n        \r\n        // Remove weekend not previously removed.   \r\n        if (startDay - endDay > 1) {\r\n            days -= 2;\r\n        }\r\n        // Remove start day if span starts on Sunday but ends before Saturday\r\n        if (startDay === 0 && endDay !== 6) {\r\n            days--;  \r\n        }\r\n        // Remove end day if span ends on Saturday but starts after Sunday\r\n        if (endDay === 6 && startDay !== 0) {\r\n            days--;\r\n        }\r\n  \r\n        let d0 = startDate.getFullYear()+\"-\"+(startDate.getMonth+1)+\"-\"+startDate.getDate();\r\n        let d1 = endDate.getFullYear()+\"-\"+(endDate.getMonth+1)+\"-\"+endDate.getDate();\r\n        /* Here is the code */\r\n        for (var i in holidays) {\r\n          if ((holidays[i] >= d0) && (holidays[i] <= d1)) {\r\n            days--;\r\n          }\r\n        }\r\n        return days;\r\n    }\r\n\r\n    //find orders belong to this team\r\n    findETOrders = (field, keyword) => {\r\n        this.state.orderObjects.forEach(e=>{\r\n            fetch(`${serverPath}/orders/find?field=team_id&keyword=${this.state.userDetails.team_id}&field2=${field}&keyword2=${keyword}`)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                if(res.data[0]!==undefined&&keyword!==\"\"){\r\n                    orderObjects = [];\r\n                    this.setState({\r\n                        orderObjects:[]\r\n                    }, ()=>{\r\n                        console.log(res.data);\r\n                        totalOrders=res.data.length;\r\n                        (res.data).forEach(e=>{\r\n                            orderObjects.push(e);\r\n                            console.log(orderObjects);\r\n                            let stateCopy = Object.assign({}, this.state);\r\n                            stateCopy.orderObjects.push(e);\r\n                            this.setState({\r\n                                stateCopy\r\n                            }, ()=>console.log(this.state.orderObjects))\r\n                        })\r\n                    })\r\n                }else if(keyword===\"\"){\r\n                    // if search bar input is empty\r\n                    // get all orders again\r\n                    this.getETOrders();\r\n                }else{\r\n                    // if search result is 0\r\n                    // clear order objects\r\n                    console.log(res.data[0]);\r\n                    totalOrders = 0;\r\n                    this.setState({\r\n                        orderObjects: []\r\n                    })\r\n                    orderObjects = [];\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // find all orders\r\n    findOrders = (field, keyword) => {\r\n        fetch(`${serverPath}/orders/find?field=${field}&keyword=${keyword}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.data[0]!==undefined&&keyword!==\"\"){\r\n                orderObjects = [];\r\n                this.setState({\r\n                    orderObjects:[]\r\n                },()=>{\r\n                    totalOrders = res.data.length;\r\n                    (res.data).forEach(e => {\r\n                        if(this.checkPink(e)){\r\n                            e={...e,color:{backgroundColor:\"pink\"}};\r\n                            orderObjects.push(e);\r\n                            console.log(orderObjects);\r\n                            let stateCopy = Object.assign({}, this.state);\r\n                            stateCopy.orderObjects.push(e);\r\n                            this.setState({\r\n                                stateCopy\r\n                            }, ()=>console.log(this.state.orderObjects))\r\n                        }\r\n                    });\r\n        \r\n                    // get grey orders (HKT requirement)\r\n                    (res.data).forEach(e => {\r\n                        if(this.checkGrey(e)){\r\n                            e={...e,color:{backgroundColor:\"#CDCDCD\"}};\r\n                            orderObjects.push(e);\r\n                            console.log(orderObjects);\r\n                            let stateCopy = Object.assign({}, this.state);\r\n                            stateCopy.orderObjects.push(e);\r\n                            this.setState({\r\n                                stateCopy\r\n                            }, ()=>console.log(this.state.orderObjects))\r\n                        }\r\n                    });\r\n        \r\n                    // get non-colored orders \r\n                    (res.data).forEach(e => {\r\n                        if(!this.checkPink(e)&&!this.checkGrey(e)){\r\n                            orderObjects.push(e);\r\n                            console.log(orderObjects);\r\n                            let stateCopy = Object.assign({}, this.state);\r\n                            stateCopy.orderObjects.push(e);\r\n                            this.setState({\r\n                                stateCopy\r\n                            }, ()=>console.log(this.state.orderObjects))\r\n                        }   \r\n                    });\r\n                })\r\n                \r\n            }else if(keyword===\"\"){ \r\n                // if search bar input is empty\r\n                // get all orders again\r\n                this.getOrders();\r\n            }else{\r\n                // if search result is 0\r\n                // clear order objects\r\n                totalOrders = 0;\r\n                this.setState({\r\n                    orderObjects: []\r\n                })\r\n                orderObjects = [];\r\n            }\r\n          })\r\n          .catch(err => console.log(err))\r\n    }\r\n\r\n    appendorderObjects = _ => {\r\n        let orderObjects = this.state.orderObjects;\r\n        let tr = [];\r\n        let td = [];\r\n        let j = this.state.orderObjects.length;\r\n        for(let i = 0; i < j; i++){\r\n            // append pink order number\r\n            td.push(\r\n                <td key={i+1*j}>\r\n                    <div className=\"orderNo\" onClick={()=>this.props.onClick('Odetails', i)}>\r\n                    <font style={orderObjects[i].color}>{orderObjects[i].order_number}</font>\r\n                    </div>\r\n                </td>\r\n            )\r\n\r\n            td.push(<td key={i+2*j}>{orderObjects[i].BSN}</td>)\r\n            td.push(<td key={i+3*j}>{orderObjects[i].order_status}</td>)\r\n            {\r\n            this.appendDate(orderObjects[i].assigning_date, td, i, j, 4);\r\n            this.appendDate(orderObjects[i].pre_visit_date, td, i, j, 5);\r\n            this.appendDate(orderObjects[i].wiring_date, td, i, j, 6);\r\n            }\r\n            td.push(<td key={i+7*j}>{orderObjects[i].team_id}</td>)\r\n            tr.push(<tr key={i+8*j}>{td}</tr>);    \r\n            td = [];\r\n        }\r\n        return tr;\r\n    } // end of method appendorderObjects\r\n    \r\n    appendDate = (date, td, i, j, keyfactor) => {\r\n        \r\n        if(date.slice(0,10)===\"0000-00-00\")\r\n                td.push(<td key={i+6*j}>-</td>)\r\n        else{\r\n            let d = new Date(date);\r\n            console.log(orderObjects[i].order_number+\" \"+d);\r\n            let yyyy = d.getFullYear();\r\n            let mm = d.getMonth()+1;\r\n            if(mm<10) mm = \"0\"+mm;\r\n            let dd = d.getDate();\r\n            if(dd<10) dd = \"0\"+dd;\r\n            td.push(<td key={i+keyfactor*j}>{yyyy+\"-\"+mm+\"-\"+dd}</td>)\r\n        } // end of if\r\n    } // end of appendDate method\r\n\r\n    render() { \r\n        return (\r\n        <>\r\n        <SearchBar pageType={this.props.pageType} find={this.findOrders} findForET={this.findETOrders}/> \r\n        <div className=\"OrderList MainWrapper\">\r\n            <PageHeader pageName={this.state.pageName} />\r\n            <div className=\"refreshBtnWrapper\">\r\n                    <i className=\"fas fa-sync refreshIcon\" onClick={(userType==='admin' || userType==='hktcs')?this.getOrders:this.getETOrders}></i>\r\n                    <div className=\"refreshTag\">refresh</div>\r\n            </div>\r\n            {/*below is the table of .....*/}\r\n            <table border=\"1px\" className=\"table table-hover table-striped table-bordered orderTable\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>\r\n                            Order#\r\n                        </th>\r\n                        <th>\r\n                            BSN\r\n                        </th>\r\n                        <th>\r\n                            Status\r\n                        </th>\r\n                        <th>\r\n                            Assigning Date\r\n                        </th>\r\n                        <th>\r\n                            Pre-Visit Date\r\n                        </th>\r\n                        <th>\r\n                            Wiring Date\r\n                        </th>\r\n                        <th>\r\n                            Team ID\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                    {this.state.orderObjects[0]!==undefined?\r\n                    <tbody>{this.appendorderObjects()}</tbody>:\r\n                    <tbody className=\"not_found_tag\"><tr><td>no result</td></tr></tbody>}\r\n            </table>\r\n            {/* end of table xxxx*/}\r\n        </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default OrderList;","import React, { Component } from 'react';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport './WorkItemsPage.css';\r\nimport { serverPath } from '../..';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nlet workitem_type;\r\n\r\nclass WorkItemsPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Work Items',\r\n            ATGitems:[],\r\n            IBIitems:[],\r\n            totalItems:0\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getitems('ATG');\r\n    }\r\n\r\n    findItems = (field, keyword) => {\r\n        fetch(`${serverPath}/workitems/find?field=type&keyword=${workitem_type}&field2=${field}&keyword2=${keyword}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(workitem_type===\"ATG\"){\r\n                this.setState({\r\n                    ATGitems: res.data,\r\n                    totalItems: res.data.length\r\n                })\r\n            }\r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    getitems = type => {\r\n        workitem_type = type;\r\n        console.log(type);\r\n        fetch(`${serverPath}/workitems/find?field=type&keyword=${type}`)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            if(type==='ATG'){\r\n                this.setState({\r\n                    totalItems: response.data.length,\r\n                    ATGitems: response.data\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    totalItems: response.data.length,\r\n                    IBIitems: response.data\r\n                })\r\n            }\r\n          })\r\n          .catch(err => console.log(err))\r\n    } // get items from db\r\n\r\n    appendItems = t => {\r\n        let items;\r\n        if(workitem_type==='ATG'){\r\n            items = this.state.ATGitems;\r\n        }else{\r\n            items = this.state.IBIitems;\r\n        }\r\n        let tr = [];\r\n        let td = [];\r\n        let j = this.state.totalItems;\r\n        for(let i = 0; i < j; i++){\r\n            td.push(<td key={i+1*j}>{items[i].work_item_id}</td>)\r\n            td.push(<td key={i+2*j}>{items[i].description}</td>)\r\n            td.push(<td key={i+3*j}>{items[i].unit}</td>)\r\n            td.push(<td key={i+4*j}>{items[i].unit_rate===0?'-':'$'+items[i].unit_rate}</td>)\r\n            tr.push(<tr key={i+5*j}>{td}</tr>);    \r\n            td = [];\r\n        }\r\n        return tr;\r\n    } // end of method appendOrders\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n            <SearchBar pageType={this.props.pageType} find={this.findItems}/> \r\n            <div className=\"WrokItemsPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName + \" (\" + workitem_type + \")\"} />\r\n\r\n                {/* unfinished part (edit work item) */}\r\n                {false?\r\n                <div className=\"editBtnWrapper\">\r\n                    <i className=\"fas fa-edit editIcon\"></i>\r\n                    <div className=\"editTag\">Edit</div>\r\n                </div>:<></>}\r\n\r\n                <button type=\"button\" class=\"btn btn-secondary atgBtn\" onClick={()=>this.getitems('ATG')}>ATG</button>\r\n                <button type=\"button\" class=\"btn btn-secondary ibiBtn\" onClick={()=>this.getitems('IBI')}>IBI</button>\r\n                <div className=\"btnUnderline\"></div>\r\n\r\n                <table border=\"1px\" className=\"table table-hover table-striped table-bordered workItemTable\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th width=\"10%\">\r\n                                Work_item_ID\r\n                            </th>\r\n                            <th width=\"60%\">\r\n                                Description\r\n                            </th>\r\n                            <th width=\"15%\">\r\n                                unit\r\n                            </th>\r\n                            <th width=\"15%\">\r\n                                unit_rate\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.ATGitems[0]!==undefined||this.state.IBIitems[0]!==undefined?this.appendItems():<></>}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default WorkItemsPage;","import React, { Component } from 'react'\r\nimport logo from './HKT.png';\r\nimport './LoginPage.css';\r\nimport {Redirect} from 'react-router';\r\nimport { serverPath } from '../..';\r\n\r\nexport let userObject = {username:''};\r\nexport let userType = '';\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      username:'',\r\n      password:'',\r\n      isAuthenticated:false,\r\n      errorMessage:''\r\n    }\r\n  }  \r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    validateUser = _ => {\r\n      fetch(`${serverPath}/users/validation?username=${this.state.username}&password=${this.state.password}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res.data[0]);\r\n        if(res.data.length>0){\r\n          userObject = res.data[0];\r\n          userType = res.data[0].user_type;\r\n          this.setState({\r\n            isAuthenticated: true,\r\n          })\r\n        }else{\r\n          this.setState({\r\n            errorMessage: 'Incorrect username or password'\r\n          });\r\n          console.log(this.state.errorMessage);\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    onSubmit = e => {\r\n      e.preventDefault();\r\n      if(this.state.password === '' || this.state.username === ''){\r\n        this.setState({\r\n          errorMessage: 'Please enter username and password'\r\n        }) // end of method setState\r\n      }\r\n      else{\r\n        this.setState({\r\n          errorMessage: ''\r\n        }) // end of method setState\r\n        this.validateUser();\r\n      } // end of checking empty\r\n    } // end of onSubmit method\r\n\r\n    render() {\r\n      return(\r\n        <div>\r\n          {this.state.isAuthenticated ? // redirect to HKTCS view or ET view if authenticated\r\n          <Redirect to={{pathname: `/main`}}/>:(\r\n            <div className=\"wrapper\">\r\n            {/*----------login container----------*/}\r\n              <div className=\"login container\">\r\n                <img src={logo} alt=\"Logo\"/>\r\n                <div className=\"title\">Order Monitoring System</div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-input\">\r\n                        <input type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Username\" onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className=\"form-input\">\r\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n                    </div>\r\n                    <button type=\"submit\" name=\"submit\" value=\"LOGIN\" className=\"btn-login\">LOGIN</button>\r\n                </form>\r\n            {/*------end of login container--------*/}\r\n                {\r\n                  this.state.errorMessage !== '' ? // prompt error message if it's not empty\r\n                  (\r\n                    <div className=\"errorMessage\">\r\n                      {this.state.errorMessage}\r\n                    </div>\r\n                  ):(<></>)\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          )} \r\n        </div>\r\n      )\r\n    }\r\n}\r\n \r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport { userObject } from '../LoginPage/LoginPage';\r\nimport { items } from '../MainView/MainView';\r\n\r\nclass HKTCSNav extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"navbar\">\r\n            {/*User*/}\r\n                <div className=\"Wrapper user\" onClick={()=>this.props.onClick('profile')}>\r\n                    <i className=\"fas fa-user-circle userIcon\"></i>\r\n                    <div className=\"username\">\r\n                        {userObject.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"sperator\"></div>\r\n            \r\n            {/*------------------------------below are nav items-----------------------------*/}\r\n              <ul className=\"navbar-nav\">\r\n                {/*Order list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[0])}>\r\n                  <i className=\"fas fa-list-ul listIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[0]}</div>\r\n                  <div className=\"underline\"></div>\r\n                </li>\r\n\r\n                {/*Import order*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[1])}>\r\n                  <i className=\"fas fa-plus plusIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[1]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n\r\n                {/*Quotation list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[2])}>\r\n                  <i className=\"fas fa-file fileIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[2]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n\r\n                {/*Teams list (unfinished)*/}\r\n                {false?\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[3])}>\r\n                  <i class=\"fas fa-users teamsIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[3]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n                :<></>}\r\n              </ul>\r\n            {/*------------------------------above are nav items-----------------------------*/}\r\n\r\n              {/*logout*/}\r\n              <div className=\"logoutWrapper\">\r\n                <i className=\"fas fa-sign-out-alt logoutIcon\" onClick={this.props.logout}></i>\r\n                  <div className=\"logoutTag\" onClick={this.props.logout}>\r\n                    Logout\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HKTCSNav;","import React, { Component } from 'react';\r\nimport { userObject } from '../LoginPage/LoginPage';\r\nimport { items } from '../MainView/MainView';\r\n\r\nclass ETNav extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"navbar\">\r\n            {/*User*/}\r\n            <div className=\"Wrapper user\" onClick={()=>this.props.onClick('profile')}>\r\n                    <i className=\"fas fa-user-circle userIcon\"></i>\r\n                    <div className=\"username\">\r\n                        {userObject.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"sperator\"></div>\r\n            \r\n            {/*------------------------------below are nav items-----------------------------*/}\r\n              <ul className=\"navbar-nav\">\r\n                {/*Order list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[0])}>\r\n                  <i className=\"fas fa-list-ul listIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[0]}</div>\r\n                  <div className=\"underline\"></div>\r\n                </li>\r\n\r\n                {/*Make quotations*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[1])}>\r\n                  <i className=\"fas fa-plus plusIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[1]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n\r\n                {/*Quotation list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[2])}>\r\n                  <i className=\"fas fa-file fileIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[2]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              {/*------------------------------above are nav items-----------------------------*/}\r\n\r\n              {/*logout*/}\r\n              <div className=\"logoutWrapper\">\r\n                <i className=\"fas fa-sign-out-alt logoutIcon\" onClick={this.props.logout}></i>\r\n                  <div className=\"logoutTag\" onClick={this.props.logout}>\r\n                    Logout\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ETNav;","import React, { Component } from 'react';\r\nimport { userObject } from '../LoginPage/LoginPage';\r\nimport { items } from '../MainView/MainView';\r\n\r\nclass AdminNav extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"navbar\">\r\n            {/*User*/}\r\n            <div className=\"Wrapper user\" onClick={()=>this.props.onClick('profile')}>\r\n                    <i className=\"fas fa-user-circle userIcon\"></i>\r\n                    <div className=\"username\">\r\n                        {userObject.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"sperator\"></div>\r\n            \r\n            {/*------------------------------below are nav items-----------------------------*/}\r\n              <ul className=\"navbar-nav\">\r\n                {/*Order list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[0])}>\r\n                  <i className=\"fas fa-list-ul listIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[0]}</div>\r\n                  <div className=\"underline\"></div>\r\n                </li>\r\n\r\n                {/*Quotation list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[1])}>\r\n                  <i className=\"fas fa-file fileIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[1]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n\r\n                {/*Wrokitems list*/}\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[2])}>\r\n                  <i className=\"fas fa-tools workItemsIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[2]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n\r\n                {/*Teams list (unfinished)*/}\r\n                {false?\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(items[3])}>\r\n                  <i class=\"fas fa-users teamsIcon navIcons\"></i>\r\n                  <div className=\"nav-link\">{items[3]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n                :<></>}\r\n                \r\n              </ul>\r\n              {/*------------------------------above are nav items-----------------------------*/}\r\n\r\n              {/*logout*/}\r\n              <div className=\"logoutWrapper\">\r\n                <i className=\"fas fa-sign-out-alt logoutIcon\" onClick={this.props.logout}></i>\r\n                  <div className=\"logoutTag\" onClick={this.props.logout}>\r\n                    Logout\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AdminNav;","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\nimport { userType } from '../LoginPage/LoginPage';\r\nimport HKTCSNav from './HKTCSNav';\r\nimport ETNav from './ETNav';\r\nimport AdminNav from './AdminNav';\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() {\r\n      const p = this.props; \r\n        return ( \r\n            <>\r\n            {userType === 'hktcs'? <HKTCSNav onClick={p.onClick} logout={p.logout} />:\r\n             userType === 'et'? <ETNav onClick={p.onClick} logout={p.logout} />:\r\n             userType === 'admin'? <AdminNav onClick={p.onClick} logout={p.logout} />:\r\n             <></>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './PageHeader.css';\r\n\r\nclass PageHeader extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"PageHeader\">\r\n                <h2 className=\"heading\">{this.props.pageName}</h2>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PageHeader;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\nimport HKTLogo from './HKT.png';\r\nimport { userType } from '../LoginPage/LoginPage';\r\n\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keyword:'',\r\n            searchField: 'order_number'\r\n        }\r\n    }\r\n\r\n\r\n    onChange = e =>{\r\n        this.setState({\r\n            keyword: e.target.value\r\n        },\r\n        () => {\r\n            if(userType==='admin' || userType==='hktcs')\r\n            this.props.find(this.state.searchField, this.state.keyword);\r\n            else\r\n            this.props.findForET(this.state.searchField, this.state.keyword);\r\n        });\r\n    }\r\n\r\n    selectOnChange = e => {\r\n        this.setState({\r\n            searchField: e.target.value\r\n        })\r\n    }\r\n\r\n    onBlur = e => {\r\n        e.target.value = '';\r\n        this.setState({\r\n            keyword:''\r\n        })\r\n    }\r\n\r\n    switchField = _ => {\r\n        console.log(\"MAMA\");\r\n        if(this.props.pageType === \"Orders\"){\r\n            this.setState({\r\n                searchField: 'order_number'\r\n            })\r\n        }else{\r\n            this.setState({\r\n                searchField: 'work_item_id'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <> \r\n        {this.props.pageType === \"Orders\"?\r\n        // render order list seach bar\r\n        <div className=\"SearchBar\">\r\n            <img src={HKTLogo} alt=\"logo\" width=\"200px\" className=\"HKTLogo\"></img>\r\n            <input type=\"text\" className=\"textBar\" placeholder=\"Search...\" name={this.state.keyword} onChange={this.onChange} onBlur={this.onBlur}></input>\r\n            <i className=\"fas fa-search searchIcon\"></i>\r\n            <select value={this.state.searchField} className=\"selectOrderFields\" onChange={this.selectOnChange}>\r\n                <option value=\"order_number\">Order#</option>\r\n                <option value=\"BSN\">BSN</option>\r\n                <option value=\"order_status\">Status</option>\r\n                <option value=\"assigning_date\">Assigning Date</option>\r\n                <option value=\"pre_visit_date\">Pre-visit Date</option>\r\n                <option value=\"wiring_date\">Wiring Date</option>\r\n                <option value=\"team_id\">Team ID</option>\r\n            </select>\r\n        </div>\r\n        :\r\n        \r\n        /* ****unfinished part****\r\n        this.props.pageType === \"Work Items\"?\r\n        \r\n        <div className=\"SearchBar\">\r\n            <img src={HKTLogo} alt=\"logo\" width=\"200px\" className=\"HKTLogo\"></img>\r\n            <input type=\"text\" className=\"textBar\" placeholder=\"Search...\" name={this.state.keyword} onChange={this.onChange} onBlur={this.onBlur}></input>\r\n            <i className=\"fas fa-search searchIcon\"></i>\r\n            <select value={this.state.searchField} className=\"selectOrderFields\" onChange={this.selectOnChange}>\r\n                <option value=\"Work_item_ID\">Work_item_ID</option>\r\n                <option value=\"Description\">Description</option>\r\n                <option value=\"unit\">unit</option>\r\n                <option value=\"unit_rate\">unit_rate</option>\r\n            </select>\r\n        </div>\r\n        */\r\n        // render normal bar\r\n        <div className=\"SearchBar\">\r\n            <img src={HKTLogo} alt=\"logo\" width=\"200px\" className=\"HKTLogo\"></img>\r\n        </div>\r\n        }\r\n        </>\r\n        );\r\n    }\r\n}\r\n \r\n\r\nexport default SearchBar;","import XLSX from 'xlsx';\r\n/* generate an array of column objects */\r\nexport const make_cols = refstr => {\r\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\r\n\treturn o;\r\n};","import React, { Component } from 'react';\r\nimport './ImportPage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport XLSX from 'xlsx';\r\nimport { make_cols } from './MakeColumns';\r\nimport {SheetJSFT} from './types'\r\nimport { serverPath } from '../../';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nclass ImportPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Import',\r\n            file: {}, // file information\r\n            data: [], // data of the excel file\r\n            cols: [], // number of cols\r\n            showSuccess: false\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        const files = e.target.files;\r\n        if (files && files[0]) this.setState({ file: files[0] });\r\n      };\r\n     \r\n      handleFile = _ =>{\r\n        /* Boilerplate to set up FileReader */\r\n        const reader = new FileReader();\r\n        const rABS = !!reader.readAsBinaryString;\r\n        reader.onload = (e) => {\r\n            \r\n            /* Parse data */\r\n            const bstr = e.target.result;\r\n            const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\r\n            /* Get first worksheet */\r\n            const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            /* Convert array of arrays */\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            /* Update state */\r\n            this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n                console.log(JSON.stringify(this.state.data, null, 2));\r\n            });\r\n\r\n            const d = this.state.data;\r\n            console.log(this.state.data[0].order_number);\r\n            \r\n            // insert orders to database\r\n            for(let i = 0; i<d.length; i++){\r\n                fetch(`${serverPath}/orders/insert?order_number=${d[i].order_number}&BSN=${d[i].BSN}&assigning_date=${d[i].assigning_date}&pre_visit_date=${d[i].pre_visit_date}&wiring_date=${d[i].wiring_date}&team_id=${d[i].team_id}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                this.setState({\r\n                    updateLog:res.data,\r\n                    showSuccess: true\r\n                })\r\n            })\r\n            .catch(err=>console.log(err))\r\n            }\r\n            \r\n        };\r\n     \r\n        if (rABS) {\r\n          reader.readAsBinaryString(this.state.file);\r\n        } else {\r\n          reader.readAsArrayBuffer(this.state.file);\r\n        };\r\n      }\r\n    \r\n\r\n    render() { \r\n        return (\r\n            <> \r\n            <SearchBar pageType={this.props.type}/>\r\n            <div className=\"ImportPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n\r\n                <div className=\"tag\">Choose an excel file to import orders</div>\r\n                <form className=\"file_upload_form\">\r\n                    <div className=\"custom-file\">\r\n                        <input type=\"file\" className=\"form-control fileInput\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\r\n                        <br />\r\n                        <div type='submit' onClick={this.handleFile} className=\"submitBtn\">submit</div>\r\n                    </div>\r\n                    {\r\n                        this.state.showSuccess?\r\n                        <div className=\"successTag\">\r\n                            Successfully Imported\r\n                        </div>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </form>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ImportPage;","import React, { Component } from 'react';\r\nimport './QuotationPage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport { serverPath } from '../..';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nexport let quotationObjects = {};\r\n\r\nclass QuotationPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Quotations',\r\n            totalQuotations: 0,\r\n            quotationObjects: {},\r\n            quotationIndex:0,\r\n            type:'quotations'\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getQuotations();\r\n    }\r\n\r\n    getQuotations = _ => {\r\n        fetch(`${serverPath}/quotations/find`)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n              quotationObjects = res.data;\r\n            this.setState({\r\n              quotationObjects: res.data,\r\n              totalQuotations:res.data.length\r\n            }, ()=>console.log(this.state.quotationObjects))\r\n          })\r\n          .catch(err => console.log(err))\r\n      } // get orders from db\r\n\r\n    appendQuotationObjects = _ => {\r\n        let quotationObjects = this.state.quotationObjects;\r\n        let tr = [];\r\n        let td = [];\r\n        let j = this.state.totalQuotations;\r\n\r\n        \r\n        for(let i = 0; i < j; i++){\r\n            let yyyyddmm = quotationObjects[i].submition_date.slice(0,10); // get the yyyy-mm-dd\r\n            console.log(quotationObjects[i].submition_date);\r\n            let hh;\r\n            // get the hh and convert ot UTC+8 \r\n            if(quotationObjects[i].submition_date.slice(12,13)===\":\"){\r\n                hh = quotationObjects[i].submition_date.slice(11,12); // case (x:xx:xx)\r\n            }else{\r\n                hh = quotationObjects[i].submition_date.slice(11,13); // case (xx:xx:xx)\r\n            }\r\n            hh = parseInt(hh)+8;\r\n            let mmss = quotationObjects[i].submition_date.slice(13,19); // get the :mm:ss\r\n\r\n            td.push(\r\n            <td key={i+1*j}>\r\n                <div className=\"orderNo\" onClick={()=>this.props.onClick('Qdetails', i)}>{quotationObjects[i].quotation_id}</div>\r\n            </td>)\r\n            td.push(<td key={i+3*j}>{quotationObjects[i].order_number}</td>)\r\n            td.push(<td key={i+4*j}>{quotationObjects[i].BSN}</td>)\r\n            td.push(<td key={i+5*j}>{yyyyddmm+\"(\"+hh+mmss+\")\"}</td>)\r\n            tr.push(<tr key={i+7*j}>{td}</tr>);    \r\n            td = [];\r\n        }\r\n        return tr;\r\n    } // end of method appendquotationObjects\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <SearchBar pageType={this.props.type}/>\r\n            {this.state.type==='quotations'?\r\n            <div className=\"QuotationPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n                <div className=\"refreshBtnWrapper\">\r\n                    <i className=\"fas fa-sync refreshIcon\" onClick={this.props.getOrders}></i>\r\n                    <div className=\"refreshTag\">refresh</div>\r\n                </div>\r\n                <table border=\"1px\" className=\"table table-hover table-striped table-bordered orderTable\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>\r\n                                Quotaion ID\r\n                            </th>\r\n                            <th>\r\n                                Order#\r\n                            </th>\r\n                            <th>\r\n                                BSN\r\n                            </th>\r\n                            <th>\r\n                                Quotation date\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                        <tbody>{this.appendQuotationObjects()}</tbody>\r\n                </table>\r\n            </div>\r\n            :\r\n            <>\r\n            </>}\r\n            </>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default QuotationPage;","import React, { Component } from 'react';\r\nimport './TeamsPage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nclass TeamsPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Teams'\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            <SearchBar pageType={this.props.type}/>\r\n            <div className=\"TeamsPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n            </div>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TeamsPage;","import React, { Component } from 'react';\r\nimport './UserProfilePage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport { userObject, userType } from '../LoginPage/LoginPage';\r\nimport { serverPath } from '../..';\r\n\r\n\r\nclass UserProfilePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'User',\r\n            userDetails: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserDetails();\r\n    }\r\n\r\n    getUserDetails = _ => {\r\n        let ut\r\n        (userType==='admin' || userType==='hktcs')?ut = 'hktcs':ut = 'et';\r\n        fetch(`${serverPath}/users/${ut}_details?username=${userObject.username}`)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            this.setState({\r\n                userDetails: res.data[0]\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const userDetails = this.state.userDetails;\r\n        return ( \r\n            <div className=\"UserProfilePage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName} />\r\n                \r\n                {/*Edit button (unfinished)*/}\r\n                {/*\r\n                <div className=\"editBtnWrapper\">\r\n                    <i className=\"fas fa-edit editIcon\"></i>\r\n                    <div className=\"editTag\">Edit</div>\r\n                </div>\r\n                */\r\n                }\r\n\r\n                {/*Profile table*/}\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                            <th className=\"usernameField\">Username: </th>\r\n                            <td className=\"usernameData\">{userDetails.username}</td>\r\n                            </tr>\r\n                            {userType === 'hktcs' || userType === 'admin'?\r\n                                <tr> \r\n                                <th className=\"staff_idField\">Staff ID: </th>\r\n                                <td className=\"staff_idData\">{userDetails.staff_id}</td>\r\n                                </tr>\r\n                                :\r\n                                <tr>\r\n                                <th className=\"tean_idField\">Team ID: </th>\r\n                                <td className=\"tean_idData\">{userDetails.team_id}</td>\r\n                                </tr>\r\n                            }\r\n                            <tr>\r\n                            <th className=\"emailField\">Email: </th>\r\n                            <td className=\"emailData\">{userDetails.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"telField\">Tel: </th>\r\n                            <td className=\"telData\">{userDetails.tel}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {/*End of Profile table*/}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default UserProfilePage;","import React, { Component } from 'react';\r\nimport './UploadPage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport { serverPath } from '../..';\r\n\r\n/*\r\nThis is a page for engineering team to upload quotaion form\r\n*/\r\n\r\nconst date = new Date()\r\nconst upload_date = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + date.getDate() + \" \" \r\n                    + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n\r\nclass UploadPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Upload Quotation',\r\n            itemObjects:[{\r\n                itemID: \"\",\r\n                Description: \"\",\r\n                Unit:\"\",\r\n                UnitRate:\"0\",\r\n                Qty: \"\"\r\n            }],\r\n\r\n            //------ quotation form fields ------//\r\n            OrderNum: \"\",\r\n            BSN: \"\",\r\n            Remarks: \"\",\r\n            //---end of quotation form fields ---//\r\n\r\n            date: upload_date, // quotation form upload date\r\n            workitems:[], // all the workitems from db\r\n            type:'', // team type\r\n            workItemRows:1, // number of rows of work items to display\r\n            orderNumInvalid: false, // indicate whether order number is valid\r\n            isConfirming: false,\r\n            uploadSuccess: false\r\n            \r\n        }\r\n    }\r\n\r\n    componentWillMount = _ =>{\r\n        this.getItemID();\r\n    }\r\n\r\n    getItemID = _ =>{\r\n        fetch(`${serverPath}/workitems/find?field=type&keyword=${this.state.type}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({\r\n                workitems:res.data\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    orderNumOnChange = e => {\r\n        this.setState({\r\n            OrderNum: e.target.value,\r\n            itemObjects:[{\r\n                itemID: \"\",\r\n                Description: \"\",\r\n                Unit:\"\",\r\n                UnitRate:\"0\",\r\n                Qty: \"\"\r\n            }]\r\n        },\r\n            ()=>{\r\n                fetch(`${serverPath}/orders/findThe?field=order_number&keyword=${this.state.OrderNum}`)\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res.data[0]);\r\n                    this.setState({\r\n                        BSN:res.data[0].BSN\r\n                    }) // end of setState()\r\n                }) // end of then block\r\n                .catch(err=>{\r\n                    this.setState({\r\n                        BSN:\"\"\r\n                    })\r\n                }) // end of catch block\r\n                console.log(this.state)\r\n\r\n                fetch(`${serverPath}/teamType/find?order_number=${this.state.OrderNum}`)\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res.data[0]);\r\n                    this.setState({\r\n                        type:res.data[0].type\r\n                    },()=>this.getItemID()) // end of setState()\r\n                }) // end of then block\r\n                .catch(err=>{\r\n                    this.setState({\r\n                        type:\"\",\r\n                        workitems:[]\r\n                    })\r\n                }) // end of catch block\r\n                console.log(this.state)\r\n            } // end of finding BSN\r\n        ) // end of setState()\r\n    } // end of orderNumOnchange()\r\n\r\n    itemOnchange = (e,i) => {\r\n        let s = this.state;\r\n        let stateCopy = Object.assign({}, this.state);\r\n        stateCopy.itemObjects[i].itemID = e.target.value;\r\n        this.setState({\r\n            stateCopy\r\n        })\r\n        s.itemObjects[i].itemID = e.target.value;\r\n        fetch(`${serverPath}/workitems/find?field=type&keyword=${s.type}&field2=work_item_id&keyword2=${s.itemObjects[i].itemID}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            let stateCopy = Object.assign({}, this.state);\r\n            stateCopy.itemObjects[i].Description = res.data[0].description;\r\n            stateCopy.itemObjects[i].Unit = res.data[0].unit;\r\n            stateCopy.itemObjects[i].UnitRate = res.data[0].unit_rate\r\n            this.setState({\r\n                stateCopy\r\n            });\r\n            console.log(s.itemObjects[i]);\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    qtyOnChange = (e,i)=>{\r\n        let stateCopy = Object.assign({}, this.state);\r\n        stateCopy.itemObjects[i].Qty = e.target.value;\r\n        this.setState({\r\n            stateCopy\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        },()=>this.getItemID())\r\n    }\r\n\r\n    closeToast = e => {\r\n        this.setState({\r\n            isConfirming:false\r\n        })\r\n    }\r\n\r\n    onSubmit = e => {\r\n        let s = this.state;\r\n        e.preventDefault();\r\n        // check whether order number is valid\r\n        if(s.BSN===\"\"){ \r\n            this.setState({orderNumInvalid:true, itemInvalid:false})\r\n        }else{\r\n            this.setState({orderNumInvalid:false},\r\n                ()=>{\r\n                // check whether workitem form is valid\r\n                s.itemObjects.forEach((e,i)=>{\r\n                    if(i<s.workItemRows){\r\n                        if(e.itemID === \"\" || e.Qty === \"\"){\r\n                            this.setState({itemInvalid: true})\r\n                        }else{\r\n                            this.setState({itemInvalid: false, isConfirming: true})\r\n                        }\r\n                    }\r\n                }) // end of check workitem form \r\n            })\r\n        } // end of check order number\r\n    }\r\n\r\n    // insert quotation form info to database\r\n    insertQuotationForm = _ => {\r\n        let s = this.state;\r\n        this.setState({\r\n            orderNumInvalid: false,\r\n            itemInvalid: false,\r\n            isConfirming: false,\r\n            uploadSuccess: true\r\n        }, ()=>{\r\n            // insert quotation info to database\r\n            fetch(`${serverPath}/quotations/insert?order_number=${s.OrderNum}&BSN=${s.BSN}&remarks=${s.Remarks}&submition_date=${s.date}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                // get quotation id\r\n                fetch(`${serverPath}/quotations/find?order_number=${s.OrderNum}&date=${s.date}`)\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    for(let i = 0; i<s.workItemRows; i++){\r\n                        console.log(res.data[0].quotation_id);\r\n                        fetch(`${serverPath}/itemcase/insert?quotation_id=${res.data[0].quotation_id}&work_item_id=${s.itemObjects[i].itemID}&item_qty=${s.itemObjects[i].Qty}`)\r\n                        .then((res)=>res.json())\r\n                        .catch(err=>console.log(err))\r\n                    }\r\n                })\r\n                .catch(err=>console.log(err))\r\n            })\r\n            .catch(err=>console.log(err))\r\n        })\r\n    }\r\n\r\n    addRowOnClick = e =>{\r\n        if(this.state.workItemRows<8){\r\n            this.setState({\r\n                workItemRows:this.state.workItemRows+1\r\n            })\r\n        }\r\n    }\r\n\r\n    renderItemID = _ =>{\r\n        let w = this.state.workitems;\r\n        let options = [];\r\n        try{\r\n            for(let i = 0; i<w.length; i++){\r\n                options.push(\r\n                    <option key={i} value={w[i].work_item_id}>{w[i].work_item_id}</option>\r\n                );\r\n            }\r\n        }catch(Exception){\r\n        }\r\n        return options;\r\n    }\r\n\r\n    renderMoreRows = _ =>{\r\n        let s = this.state;\r\n        let rows = [];\r\n        this.state.itemObjects.push({\r\n            itemID: \"\",\r\n            Description: \"\",\r\n            Unit:\"\",\r\n            UnitRate:\"0\",\r\n            Qty: \"\"\r\n        });\r\n        for(let i = 1; i<this.state.workItemRows; i++){\r\n            rows.push(\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <select id=\"itemID\" className=\"form-control\" value={s.itemObjects[i].itemID} onChange={(e)=>this.itemOnchange(e,i)}>\r\n                            <option defaultValue=\" \"> </option>\r\n                            {this.renderItemID()}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"Description\" value={s.itemObjects[i].Description} readOnly/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"Unit\" value={s.itemObjects[i].Unit} readOnly/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"UnitRate\" value={`$${parseFloat(s.itemObjects[i].UnitRate).toFixed(1)}`} readOnly/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"Qty\" value={s.itemObjects[i].Qty} onChange={(e)=>this.qtyOnChange(e,i)}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"Amount\" value={`$${parseFloat(s.itemObjects[i].UnitRate*s.itemObjects[i].Qty).toFixed(1)}`} readOnly/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return rows\r\n    }\r\n\r\n    renderTotalAmount = _ => {\r\n        let s = this.state;\r\n        let txt=[];\r\n        let totalAmount = 0;\r\n        for(let i=0; i<s.workItemRows-1; i++){\r\n            totalAmount += s.itemObjects[i].UnitRate*s.itemObjects[i].Qty;\r\n        }\r\n        totalAmount += s.itemObjects[s.workItemRows-1].UnitRate*s.itemObjects[s.workItemRows-1].Qty;\r\n        txt.push(<>{\"$\"+parseFloat(totalAmount).toFixed(1)}</>);\r\n        return txt\r\n    }\r\n\r\n    render() {\r\n        let s = this.state; \r\n        return ( \r\n            <div className=\"UploadPage MainWrapper\">\r\n                <PageHeader pageName={s.pageName}/>\r\n                <form className=\"quotation_form\" onSubmit={this.onSubmit}>\r\n                    {/*------------------------------------------*/}    \r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-xs-2\">\r\n                            {s.orderNumInvalid?<div className=\"invalidOrderNumMsg\">*Invalid order number</div>:<></>}\r\n                            <label htmlFor=\"OrderNum\">Order Number: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"OrderNum\" value={s.OrderNum} onChange={this.orderNumOnChange}/>\r\n                        </div>\r\n                    </div>\r\n                    {/*------------------------------------------*/}\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-sx-2\">\r\n                            <label htmlFor=\"BSN\">BSN: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"BSN\" value={s.BSN} onChange={this.onChange} readOnly/>\r\n                        </div>\r\n                    </div>\r\n                    {/*------------------------------------------*/}\r\n                    <hr/>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-sx-2\">\r\n                            <div >Work Items: </div>\r\n                            {s.itemInvalid?<div className=\"invalidItemFormMsg\">*Please fill in both \"Item ID\" and \"Qty\"</div>:<></>}\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                    {/*------------------------------------------*/}\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <label htmlFor=\"itemID\">Item ID: </label>\r\n                            <select id=\"itemID\" className=\"form-control\" value={s.itemObjects[0].itemID} onChange={(e)=>this.itemOnchange(e,0)}>\r\n                                <option defaultValue=\" \"> </option>\r\n                                {this.renderItemID()}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"description\">Description: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"Description\" value={s.itemObjects[0].Description} readOnly/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label htmlFor=\"unit\">Unit: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"Unit\" value={s.itemObjects[0].Unit} readOnly/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label htmlFor=\"unitRate\">Unit Rate: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"UnitRate\" value={`$${parseFloat(s.itemObjects[0].UnitRate).toFixed(1)}`} readOnly/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label htmlFor=\"qty\">Qty: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"Qty\" value={s.itemObjects[0].Qty} onChange={(e)=>this.qtyOnChange(e,0)}/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label htmlFor=\"amount\">Amount: </label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"Amount\" value={`$${parseFloat(s.itemObjects[0].UnitRate*s.itemObjects[0].Qty).toFixed(1)}`} readOnly/>\r\n                        </div>\r\n                    </div>\r\n                    {/*more rows will be rendered if this.state.workItemRows increment*/}\r\n                    {this.renderMoreRows()}\r\n                    {/*------------------------------------------*/}\r\n                    <i className=\"fas fa-plus addColBtn\" onClick={this.addRowOnClick}></i>\r\n                    <hr/>\r\n                    {/*------------------------------------------*/}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"remarks\">Remarks:</label>\r\n                        <textarea className=\"form-control\" id=\"Remarks\" rows=\"3\" onChange={this.onChange}></textarea>\r\n                    </div>\r\n                    {/*------------------------------------------*/}\r\n\r\n                    <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Upload</button>\r\n                        {s.uploadSuccess?<div className=\"uploadSuccessMsg\">Successfully Uploaded</div>:<></>}\r\n                    </div>\r\n                </form>\r\n\r\n                {/*----------------confirm prompt---------------------*/}\r\n                {this.state.isConfirming?\r\n                <div className=\"confirmPromptWrapper\">\r\n                <div className=\"toast uploadConfirmPrompt\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                    <div className=\"toast-header\">\r\n                        <strong className=\"mr-auto\">Confirm</strong>\r\n                        <button type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\" onClick={this.closeToast}>&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"toast-body\">\r\n                            Order Number: {this.state.OrderNum}<br/>\r\n                            Total Amount: {this.renderTotalAmount()}\r\n                    </div>\r\n                    <button className=\"btn btn-primary confirmBtn\" onClick={this.insertQuotationForm}>Confrim</button>\r\n                </div>\r\n                </div>\r\n                :\r\n                <></>\r\n                }\r\n                \r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default UploadPage;","import React, { Component } from 'react';\r\nimport './OrderDetails.css';\r\nimport PageHeader from '../../PageHeader/PageHeader';\r\nimport { serverPath } from '../../..';\r\nimport { userObject } from '../../LoginPage/LoginPage';\r\nimport { orderObjects } from '../OrderList';\r\n\r\nlet ts = {\r\n    order_number: 0,\r\n    BSN: 0,\r\n    order_status: '',\r\n    assigning_date: '',\r\n    pre_visit_date: '',\r\n    wiring_date: '',\r\n    team_id: 0,\r\n    pendingReason:''\r\n} // temporal state for displaying details\r\n\r\n\r\nclass OrderDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let orderIndex = this.props.orderIndex;\r\n        this.state={\r\n            pageName: 'Order details',\r\n            editing:false,\r\n            editType:'order_status',\r\n            isPending: false,\r\n            // -------order info--------\r\n            order_number: orderObjects[orderIndex].order_number,\r\n            BSN: orderObjects[orderIndex].BSN,\r\n            order_status: orderObjects[orderIndex].order_status,\r\n            assigning_date: orderObjects[orderIndex].assigning_date,\r\n            pre_visit_date: orderObjects[orderIndex].pre_visit_date,\r\n            wiring_date: orderObjects[orderIndex].wiring_date,\r\n            team_id: orderObjects[orderIndex].team_id,\r\n            pendingReason: '',\r\n            // ----end of order info-----\r\n            isSuccess: false, // is updated successfully\r\n            isFail:false, // is fail to update\r\n            isConfirming:false, // is confirming update\r\n            updateLog:[], // all the update logs of this order from database\r\n            reasons:[], // all the pending reasons from database\r\n            selectedReason:'' // the reasons selected for update\r\n            \r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        ts=this.state;\r\n        this.getUpdateLog();\r\n        this.getReasonsList();\r\n        this.getPendingReason();\r\n    }\r\n\r\n    getPendingReason = _ => {\r\n        let orderIndex = this.props.orderIndex;\r\n        fetch(`${serverPath}/reasons/find?reason_id=${orderObjects[orderIndex].pending_reason_id}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            orderObjects[orderIndex].pendingReason = res.data[0].description;\r\n            ts.pendingReason = res.data[0].description;\r\n            this.setState({\r\n                pendingReason: res.data[0].description\r\n            })\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    editOnClick=()=>{\r\n        this.setState({\r\n            editing:true\r\n        })\r\n    }\r\n\r\n    closeEditOnClick=()=>{\r\n        this.setState({\r\n            editing:false,\r\n            isSuccess: false\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value,\r\n            isSuccess: false\r\n        })\r\n    }\r\n\r\n    editTypeOnchange = e =>{\r\n        this.setState({\r\n            editType: e.target.value,\r\n            isSuccess: false,\r\n            selectedReason:''\r\n        })\r\n    }\r\n\r\n    statusOnChange = e =>{\r\n        this.setState({\r\n            order_status: e.target.value,\r\n            isSuccess: false,\r\n            selectedReason:''\r\n        })\r\n    }\r\n\r\n    closeToast = e =>{\r\n        this.setState({\r\n            isConfirming:false\r\n        })\r\n    }\r\n\r\n    onConfirm = e =>{\r\n        if(this.state.order_status==='pending'&&this.state.editType==='order_status'){\r\n            this.setState({\r\n                isPending:true\r\n            },()=>{\r\n                this.setState({\r\n                    isConfirming:true\r\n                })\r\n            })\r\n        }else{\r\n            this.setState({\r\n                isPending:false\r\n            },()=>{\r\n                this.setState({\r\n                    isConfirming:true\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getModifiedValue = _ =>{\r\n        let s = this.state;\r\n        let field = s.editType;\r\n        let value;\r\n        switch(field){\r\n            case 'order_status':\r\n            value = s.order_status;\r\n            break;\r\n            case 'assigning_date':\r\n            value = s.assigning_date;\r\n            break;\r\n            case 'pre_visit_date':\r\n            value = s.pre_visit_date;\r\n            break;\r\n            case 'wiring_date':\r\n            value = s.wiring_date;\r\n            break;\r\n            case 'team_id':\r\n            value = s.team_id;\r\n            break;\r\n            default:\r\n        }\r\n        console.log(value);\r\n        return value\r\n    }\r\n\r\n    getOriginalValue = _ =>{\r\n        let s = this.state;\r\n        let field = s.editType;\r\n        let value;\r\n        switch(field){\r\n            case 'order_status':\r\n            value = ts.order_status;\r\n            break;\r\n            case 'assigning_date':\r\n            value = ts.assigning_date;\r\n            break;\r\n            case 'pre_visit_date':\r\n            value = ts.pre_visit_date;\r\n            break;\r\n            case 'wiring_date':\r\n            value = ts.wiring_date;\r\n            break;\r\n            case 'team_id':\r\n            value = ts.team_id;\r\n            break;\r\n            default:\r\n        }\r\n        console.log(value);\r\n        return value\r\n    }\r\n\r\n    onSubmit = e =>{\r\n        e.preventDefault();\r\n        let s = this.state;\r\n        let order_number = s.order_number;\r\n        let field = s.editType;\r\n        //------------ get current time --------------\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = today.getFullYear();\r\n        let hour = today.getHours();\r\n        let minutes = today.getMinutes();\r\n        let seconds = today.getSeconds();\r\n        //--------- end of get current time -----------\r\n        let original_data = this.getOriginalValue();\r\n        let modified_data = this.getModifiedValue();\r\n        today = yyyy + '-' + mm + '-' + dd + \"T\" + hour + \":\" + minutes + \":\" + seconds;\r\n\r\n        // update orders\r\n        fetch(`${serverPath}/orders/update?order_number=${order_number}&field=${field}&value=${modified_data}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({\r\n                isConfirming:false,\r\n                isSuccess:true\r\n            })\r\n            ts=this.state; // update details for display\r\n        })\r\n        .catch(err=>{\r\n            this.setState({\r\n                isConfirming:false,\r\n                isFail:true\r\n            })\r\n        })\r\n\r\n        // insert update log\r\n        fetch(`${serverPath}/orders/insert/updateLog?order_number=${order_number}&field=${field}&original_data=${original_data}&modified_data=${modified_data}&editor=${userObject.username}&date=${today}&remarks=${s.selectedReason}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            console.log(res)\r\n            this.getUpdateLog(); // refresh the update log in this page\r\n        })\r\n        .catch(err=>console.log(err))\r\n\r\n        \r\n    } // end of onSubmit()\r\n\r\n    getUpdateLog = _ =>{\r\n        fetch(`${serverPath}/orders/find/updateLog?order_number=${this.state.order_number}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({\r\n                updateLog:res.data\r\n            })\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    getReasonsList = _ =>{\r\n        fetch(`${serverPath}/reasons`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({\r\n                reasons:res.data\r\n            })\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    renderLog = _ =>{\r\n        let u = this.state.updateLog;\r\n        let log = [];\r\n        for(let i = 0; i<this.state.updateLog.length; i++){\r\n            let yyyyddmm = u[i].date.slice(0,10); // get the yyyy-mm-dd\r\n            let hh = u[i].date.slice(12,13); // get the hh and convert ot UTC+8\r\n            hh = parseInt(hh)+8;\r\n            let mmss = u[i].date.slice(13,19); // get the :mm:ss\r\n            log.push(\r\n                <>\r\n                <span key={i}>\r\n                - change \"{u[i].field}\" \r\n                from <font color=\"red\">{u[i].original_data} </font> \r\n                to <font color=\"red\">{u[i].modified_data} </font>\r\n                by \"{u[i].editor}\" \r\n                on \"{yyyyddmm+\"(\"+hh+mmss+\")\"}\" <br/>\r\n\r\n                {/* display pending reason if order is modified to \"pending\" */}\r\n                {u[i].modified_data==='pending'?\r\n                <>\r\n                &nbsp;&nbsp;&nbsp;-> pending reason: <font color=\"red\">{u[i].remarks}</font>\r\n                <br/>\r\n                </>\r\n                :<></>}\r\n                {/* end of displaying pending reason */}\r\n\r\n                </span>\r\n                <br/>\r\n                </>\r\n            )\r\n            \r\n        }\r\n        return log;\r\n    }\r\n\r\n    reasonOnChange = e => {\r\n        this.setState({\r\n            selectedReason: e.target.value\r\n        },()=>{\r\n            console.log(this.state.selectedReason);\r\n        })\r\n        \r\n    }\r\n\r\n    renderReasons = _ =>{\r\n        let r = this.state.reasons;\r\n        let options = [];\r\n        try{\r\n            for(let i = 0; r.length; i++){\r\n                options.push(<option key={i} value={r[i].description}>{r[i].description}</option>);\r\n            }\r\n        }catch(Exception){\r\n            console.log(Exception);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        let s = this.state;\r\n        return (\r\n            <div className=\"OrderDetails MainWrapper\">\r\n                {/*-----------------------render order edit form---------------------------*/}\r\n                {this.state.editing?\r\n                <>\r\n                <PageHeader pageName=\"Edit Order Details\"/>\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"Order_editor\">\r\n\r\n                        {this.state.isSuccess? \r\n                        <div className=\"msg\">\r\n                            Sueccefully Updated!\r\n                        </div>\r\n                        :<></>\r\n                        }\r\n\r\n                        {this.state.isFail? \r\n                        <div className=\"msg\">\r\n                            Update Failed\r\n                        </div>\r\n                        :<></>\r\n                        }\r\n                            <i className=\"fas fa-times closeIcon\" onClick={this.closeEditOnClick}></i>\r\n                            <form className=\"Order_edit_form\" onSubmit={this.onSubmit}>\r\n\r\n                                {this.state.isConfirming&&!this.state.isPending? // render normal toast asking user to confirm changes\r\n                                <div className=\"toast comfirmPrompt\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                                    <div className=\"toast-header\">\r\n                                        <strong className=\"mr-auto\">Confirm</strong>\r\n                                        <button type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\" onClick={this.closeToast}>&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"toast-body\">\r\n                                        Change <font color=\"red\">{this.state.editType}</font>&nbsp;\r\n                                        from <font color=\"red\">{this.getOriginalValue()}</font>&nbsp;\r\n                                        to <font color=\"red\">{this.getModifiedValue()}</font> \r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-primary confirmBtn\">Confirm</button>\r\n                                </div>\r\n                                : // render a toast with pending reason required\r\n                                this.state.isConfirming&&this.state.isPending?\r\n                                <div className=\"toast comfirmPrompt\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                                    <div className=\"toast-header\">\r\n                                        <strong className=\"mr-auto\">Pending Reason</strong>\r\n                                        <button type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\" onClick={this.closeToast}>&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"toast-body\">\r\n                                    <label htmlFor=\"selectedReason\">Pending reason: </label><br/>\r\n                                        <select value={this.state.selectedReason} id=\"selectedReason\" onChange={this.reasonOnChange}>\r\n                                            {this.renderReasons()}\r\n                                        </select>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-primary confirmBtn\">Confirm</button>\r\n                                </div>\r\n                                :<></>\r\n                                }\r\n\r\n                                <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                <label htmlFor=\"editType\">Field: </label>\r\n                                    <select value={this.state.editType} id=\"editType\" className=\"form-control\" onChange={this.editTypeOnchange}>\r\n                                        <option value=\"order_status\">Status</option>\r\n                                        <option value=\"assigning_date\">Assigning Date</option>\r\n                                        <option value=\"pre_visit_date\">Pre-Visit Date</option>\r\n                                        <option value=\"wiring_date\">Wiring Date</option>\r\n                                        <option value=\"team_id\">Team ID</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                {s.editType==='order_status'? // render order status field\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"status\">Status: </label>\r\n                                       <select value={this.state.order_status} id=\"order-status\" className=\"form-control\" onChange={this.statusOnChange}>\r\n                                            <option value=\"assigned\">assigned</option>\r\n                                            <option value=\"pending\">pending</option>\r\n                                            <option value=\"complete\">complete</option>\r\n                                        </select>\r\n                                    </div>\r\n                                :\r\n                                s.editType==='assigning_date'? // render assigning date field\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"ad\">Assigning Date: </label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"assigning_date\" value={s.assigning_date} onChange={this.onChange}/>\r\n                                    </div>\r\n                                :\r\n                                s.editType==='pre_visit_date'? // render pre visit date field\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"pvd\">Pre-Visit Date: </label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"pre_visit_date\" value={s.pre_visit_date} onChange={this.onChange}/>\r\n                                    </div>\r\n                                :\r\n                                s.editType==='wiring_date'? // render wiring date field\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"wd\">Wiring Date: </label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"wiring_date\" value={s.wiring_date} onChange={this.onChange}/>\r\n                                    </div>\r\n                                :\r\n                                s.editType==='team_id'? // render team id field\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"team_id\">Team ID: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"team_id\" value={s.team_id} onChange={this.onChange}/>\r\n                                    </div>\r\n                                :<></>\r\n                                }\r\n                                </div>\r\n                                <span className=\"badge badge-primary updateBtn\" onClick={this.onConfirm}>Update</span>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n                // --------------------end of order edit form-----------------------------//\r\n                :\r\n                // --------------------render order details-------------------------------//\r\n                <>\r\n                <PageHeader pageName={this.state.pageName}/>\r\n                <div className=\"editBtnWrapper\">\r\n                    <i className=\"fas fa-edit editIcon\" onClick={this.editOnClick}></i>\r\n                    <div className=\"editTag\">Edit</div>\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <table className=\"table table-hover table-striped detailsTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                            <th className=\"orderNoField\">Order Number: </th>\r\n                            <td className=\"orderNoData\">{ts.order_number}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"BSNField\">BSN: </th>\r\n                            <td className=\"BNSData\">{ts.BSN}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"statusField\">Status: </th>\r\n                            <td className=\"statusData\">{ts.order_status}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"ADField\">Assigning Date: </th>\r\n                            <td className=\"ADData\">{ts.assigning_date}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"PVField\">Pre-Visit Date: </th>\r\n                            <td className=\"PVData\">{ts.pre_visit_date}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"WField\">Wiring Date: </th>\r\n                            <td className=\"WData\">{ts.wiring_date}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"TIDField\">Team ID: </th>\r\n                            <td className=\"TIData\">{ts.team_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"PRDField\">Pending Reason: </th>\r\n                            <td className=\"PRData\">{ts.pendingReason}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </table>\r\n                        <div className=\"updateLogTag\">Update Log:</div>\r\n                        <div className=\"updateLog\">\r\n                            {this.renderLog()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n                //--------------------end of order details-------------------------//\r\n                }\r\n            </div> \r\n         );\r\n    }\r\n}\r\n \r\nexport default OrderDetails;","import React, { Component } from 'react';\r\nimport './QuotationDetails.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\nimport axios from 'axios';\r\nimport saveAs from 'file-saver';\r\nimport { serverPath } from '../..';\r\nimport { quotationObjects } from '../QuotationPage/QuotationPage';\r\n\r\nclass QuotationDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: 'Quotaion Details',\r\n            quotationIndex: this.props.quotationIndex,\r\n            quotationObjects: this.props.quotationObjects,\r\n            itemCasesObjects: [{}],\r\n        }\r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.getItemCase();\r\n    }\r\n\r\n    createAndDownloadPDF = () => {\r\n        axios.post(`${serverPath}/create-pdf`, this.state)\r\n        .then(()=>axios.get(`${serverPath}/fetch-pdf`, {responseType:'blob'}))\r\n        .then((res)=>{\r\n            const pdfBlob = new Blob([res.data], { type: 'application/pdf'})\r\n            saveAs(pdfBlob, 'newPdf.pdf');\r\n        })\r\n    }\r\n\r\n    getItemCase = _ => {\r\n        let q = quotationObjects;\r\n        let i = this.state.quotationIndex;\r\n        fetch(`${serverPath}/itemcase/find?quotation_id=${q[i].quotation_id}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({\r\n                itemCasesObjects: res.data\r\n            })\r\n        })\r\n        .then((res)=>{\r\n            this.getItemDetails();\r\n        })\r\n        .catch(err=>console.log(err))\r\n    } // get orders from db\r\n\r\n    getItemDetails = _ => {\r\n        for(let i = 0; i<this.state.itemCasesObjects.length; i++){\r\n            fetch(`${serverPath}/workitems/find?field=work_item_id&keyword=${this.state.itemCasesObjects[i].work_item_id}`)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            let stateCopy = Object.assign({}, this.state);\r\n            stateCopy.itemCasesObjects[i].Description=res.data[0].description;\r\n            stateCopy.itemCasesObjects[i].Unit=res.data[0].unit;\r\n            stateCopy.itemCasesObjects[i].UnitRate=res.data[0].unit_rate;\r\n            this.setState({\r\n                stateCopy\r\n            })\r\n            console.log(this.state.itemCasesObjects);\r\n        })\r\n        .catch(err=>console.log(err))\r\n        }\r\n    }\r\n\r\n    renderMoreItemCases = _ => {\r\n        let ic = this.state.itemCasesObjects;\r\n        let rows = [];\r\n        console.log(ic)\r\n        for(let i = 1; i<ic.length; i++){\r\n            rows.push(\r\n                <tr>\r\n                    <td colSpan=\"2\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"ItemID\" value={ic[i].work_item_id} readOnly/>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"Description\" value={ic[i].Description} readOnly/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"Unit\" value={ic[i].Unit} readOnly/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"UnitRate\" value={`$${ic[i].UnitRate}`} readOnly/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"Qty\" value={ic[i].item_qty} readOnly/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"Amount\" value={`$${ic[i].UnitRate*ic[i].item_qty}`} readOnly/>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    render() {\r\n        let q = quotationObjects;\r\n        let i = this.state.quotationIndex;\r\n        let ic = this.state.itemCasesObjects;\r\n        return (\r\n            <div className=\"QuotationDetails MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n                <div className=\"editBtnWrapper\" onClick={this.createAndDownloadPDF}>\r\n                    <i className=\"fas fa-file-pdf pdfIcon\"></i>\r\n                    <div className=\"editTag\">Edit</div>\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <table className=\"table table-hover table-striped\">\r\n                        <tbody>\r\n                            <tr>\r\n                            <th className=\"orderNoField\">Quotation ID </th>\r\n                            <td className=\"orderNoData\">{q[i].quotation_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"BSNField\">Order#: </th>\r\n                            <td className=\"BNSData\">{q[i].order_number}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th className=\"statusField\">BSN: </th>\r\n                            <td className=\"statusData\">{q[i].BSN}</td>\r\n                            </tr>\r\n                            {/*----------------------------------------------------------------- */}\r\n                            <tr>\r\n                                <td colSpan=\"2\">\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"itemID\">Item ID: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"ItemID\" value={ic[0].work_item_id} readOnly/>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label htmlFor=\"description\">Description: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"Description\" value={ic[0].Description} readOnly/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"unit\">Unit: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"Unit\" value={ic[0].Unit} readOnly/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"unitRate\">Unit Rate: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"UnitRate\" value={`$${ic[0].UnitRate}`} readOnly/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"qty\">Qty: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"Qty\" value={ic[0].item_qty} readOnly/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"amount\">Amount: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"Amount\" value={`$${ic[0].UnitRate*ic[0].item_qty}`} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                            </tr>\r\n                            {this.renderMoreItemCases()}\r\n\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n         );\r\n    }\r\n}\r\n \r\nexport default QuotationDetails;","import React, { Component } from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { userType, userObject } from '../LoginPage/LoginPage';\r\nimport OrderList from '../OrderList/OrderList';\r\nimport ImportPage from '../ImportPage/ImportPage';\r\nimport QuotationPage from '../QuotationPage/QuotationPage';\r\nimport TeamsPage from '../TeamsPage/TeamsPage';\r\nimport UserProfilePage from '../UserProfilePage/UserProfilePage';\r\nimport UploadPage from '../UploadPage/UploadPage';\r\nimport WorkItemsPage from '../WorkItemsPage/WorkItemsPage';\r\nimport OrderDetails from '../OrderList/OrderDetails/OrderDetails';\r\nimport QuotationDetails from '../QuotationDetails/QuotationDetails';\r\n\r\nexport let items = [];\r\n\r\nclass MainView extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        orders:[],\r\n        pageType: 'Orders',\r\n        orderIndex: 0,\r\n        username: userObject.username,\r\n        quotationIndex:0\r\n      }\r\n    }\r\n\r\n    componentWillMount(){\r\n      if(userType==='hktcs'){\r\n        items = [\"Orders\", \"Import\", \"Quotations\"];\r\n          this.setState({\r\n              pageType: items[0]\r\n          })\r\n      }else if(userType==='et'){\r\n        items = [\"Orders\", \"Upload Quotation\", \"Quotations\"];\r\n        this.setState({\r\n            pageType: items[0]\r\n        })\r\n      }else{\r\n        items = [\"Orders\", \"Quotations\", \"Work Items\"];\r\n        this.setState({\r\n            pageType: items[0]\r\n        })\r\n      } // initialize nav items\r\n\r\n      console.log(this.state.username);\r\n    } \r\n\r\n    navOnClick = t =>{\r\n      this.setState({\r\n        pageType:t\r\n      })\r\n    } // change the existing type of the page\r\n\r\n    orderOnClick = (t,index) => {\r\n      this.setState({\r\n        pageType:t,\r\n        orderIndex: index\r\n      })\r\n    } // change to the relative order detail page\r\n\r\n    quotationOnClick = (t, index) => {\r\n      this.setState({\r\n        pageType:t,\r\n        quotationIndex: index\r\n      })\r\n    } // change to a relative quotation detail page\r\n\r\n    logout = _ => {\r\n      this.setState({\r\n        username:''\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const s = this.state;\r\n        return (\r\n          <div>\r\n            {this.state.username===''?<Redirect to={{pathname: `/`}}/>:\r\n              <>\r\n              <NavBar onClick={this.navOnClick} logout={this.logout} items={s.items}/>\r\n              {/*render screen when login as hktcs*/}\r\n              {userType==='hktcs'?\r\n                <>\r\n                 {s.pageType===items[0]?<OrderList onClick={this.orderOnClick} orderObjects={this.state.orderObjects} pageType={s.pageType}/>:\r\n                 s.pageType===items[1]?<ImportPage pageType={s.pageType}/>:\r\n                 s.pageType===items[2]?<QuotationPage pageType={s.pageType} onClick={this.quotationOnClick}/>:\r\n                 s.pageType===items[3]?<TeamsPage pageType={s.pageType}/>:\r\n                 s.pageType==='Odetails'?<OrderDetails orderIndex={this.state.orderIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='Qdetails'?<QuotationDetails quotationIndex={this.state.quotationIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='profile'?<UserProfilePage pageType={s.pageType}/>:\r\n                 <></>\r\n                }\r\n                </>\r\n                :<></>\r\n              }\r\n              {/*render screen when login as et*/}\r\n              {userType==='et'?\r\n                <>\r\n                 {s.pageType===items[0]?<OrderList onClick={this.orderOnClick} orderObjects={this.state.orderObjects} pageType={s.pageType}/>:\r\n                 s.pageType===items[1]?<UploadPage pageType={s.pageType}/>:\r\n                 s.pageType===items[2]?<QuotationPage pageType={s.pageType} onClick={this.quotationOnClick}/>:\r\n                 s.pageType==='Odetails'?<OrderDetails orderIndex={this.state.orderIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='Qdetails'?<QuotationDetails quotationIndex={this.state.quotationIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='profile'?<UserProfilePage pageType={s.pageType}/>:\r\n                 <></>\r\n                }\r\n                </>\r\n                :<></>\r\n              }\r\n              {/*render screen when login as admin*/}\r\n              {userType==='admin'?\r\n                <>\r\n                 {s.pageType===items[0]?<OrderList onClick={this.orderOnClick} orderObjects={this.state.orderObjects} pageType={s.pageType}/>:\r\n                 s.pageType===items[1]?<QuotationPage pageType={s.pageType} onClick={this.quotationOnClick}/>:\r\n                 s.pageType===items[2]?<WorkItemsPage pageType={s.pageType}/>:\r\n                 s.pageType===items[3]?<TeamsPage pageType={s.pageType}/>:\r\n                 s.pageType==='Odetails'?<OrderDetails orderIndex={this.state.orderIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='Qdetails'?<QuotationDetails quotationIndex={this.state.quotationIndex} pageType={s.pageType}/>:\r\n                 s.pageType==='profile'?<UserProfilePage pageType={s.pageType}/>:\r\n                 <></>\r\n                }\r\n                </>\r\n                :<></>\r\n              }\r\n              </>\r\n            }\r\n          </div>\r\n        ); // end of return\r\n    }\r\n}\r\nexport default MainView;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport MainView from './components/MainView/MainView';\r\n\r\n\r\nconst Routes = () => (\r\n\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={LoginPage}/>\r\n        <Route path='/LoginPage' component={LoginPage}/>\r\n        <Route path='/main' component={MainView}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          <Routes />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport const serverPath = 'http://localhost:8080';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}