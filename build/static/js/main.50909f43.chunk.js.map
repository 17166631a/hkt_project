{"version":3,"sources":["components/LoginPage/HKT.png","components/SearchBar/HKT.png","components/LoginPage/LoginPage.js","components/NavBar/NavBar.js","components/SearchBar/SearchBar.js","components/PageHeader/PageHeader.js","components/OrderList/OrderList.js","components/ControlStaffView/ImportPage/ImportPage.js","components/QuotationPage/QuotationPage.js","components/UserProfilePage/UserProfilePage.js","components/ControlStaffView/ControlStraffView.js","components/EngineTeamView/UploadPage/UploadPage.js","components/EngineTeamView/EngineTeamView.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","username","LoginPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","checkHKTCS","_","fetch","concat","state","password","then","res","json","console","log","data","length","isAuthenticated","type","catch","err","checkET","onSubmit","preventDefault","errorMessage","react_default","a","createElement","Redirect","to","pathname","className","src","logo","alt","Fragment","placeholder","Component","NavBar","createNavItems","items","i","navItems","push","key","_this2","onClick","logout","SearchBar","searchField","onBlur","selected","searchItem","HKTLogo","width","PageHeader","pageName","OrderList","convertDateTime","date","split","slice","AppendOrders","orders","tr","td","j","totalOrders","order_number","order_status","assigning_date","pre_visit_date","wiring_date","team_id","components_PageHeader_PageHeader","border","ImportPage","QuotationPage","UserProfilePage","ControlStaffView","t","getOrders","response","es_Redirect","components_NavBar_NavBar","components_SearchBar_SearchBar","components_OrderList_OrderList","ControlStaffView_ImportPage_ImportPage","components_QuotationPage_QuotationPage","components_UserProfilePage_UserProfilePage","UploadPage","EngineTeamView","x","EngineTeamView_UploadPage_UploadPage","Routes","BrowserRouter","Switch","Route","exact","path","component","App","src_Routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50909f43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HKT.f7fb153d.png\";","module.exports = __webpack_public_path__ + \"static/media/HKT.f7fb153d.png\";","import React, { Component } from 'react'\r\nimport logo from './HKT.png';\r\nimport './LoginPage.css';\r\nimport {Redirect} from 'react-router';\r\n\r\nexport let username = ''; // \r\n\r\nclass LoginPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      username:'',\r\n      password:'',\r\n      isAuthenticated:false,\r\n      type:'',\r\n      errorMessage:''\r\n    }\r\n  }  \r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    checkHKTCS = _ => {\r\n      fetch(`http://localhost:8080/users/findHKTCS?username=${this.state.username}&password=${this.state.password}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if(res.data.length>0){\r\n          this.setState({\r\n            isAuthenticated: true,\r\n            type: 'ControlStaffView'\r\n          })\r\n        }else{\r\n          return false;\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n    } // end of method checkHKTCS\r\n\r\n    checkET = _ => {\r\n      fetch(`http://localhost:8080/users/findET?username=${this.state.username}&password=${this.state.password}`)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if(res.data.length>0){\r\n              this.setState({\r\n                isAuthenticated: true,\r\n                type: 'EngineTeamView'\r\n              })\r\n            }else{\r\n              return false;\r\n            }\r\n          })\r\n          .catch(err => console.log(err))\r\n    } // end of method checkET\r\n\r\n    onSubmit = e => {\r\n      username = this.state.username; // export to other components\r\n      e.preventDefault();\r\n      if(this.state.password === '' || this.state.username === ''){\r\n        this.setState({\r\n          errorMessage: 'Please enter username and password'\r\n        }) // end of method setState\r\n      }\r\n      else{\r\n        this.setState({\r\n          errorMessage: ''\r\n        }) // end of method setState\r\n        if(!this.checkHKTCS()){\r\n          if(!this.checkET()){\r\n            this.setState({\r\n              errorMessage: 'Incorrect username or password'\r\n            }) // end of method setState\r\n          } // end of validation username and password from ET DB\r\n        } // end of validating username and password from HKTCS DB\r\n      } // end of checking empty\r\n    } // end of onSubmit method\r\n\r\n    render() {\r\n      return(\r\n        <div>\r\n          {this.state.isAuthenticated ? // redirect to HKTCS view or ET view if authenticated\r\n          <Redirect to={{pathname: `/${this.state.type}`}}/>:(\r\n            <div className=\"login container\">\r\n              <img src={logo} alt=\"Logo\"/>\r\n              {\r\n                this.state.errorMessage !== '' ? // prompt error message if it's not empty\r\n                (\r\n                  <div>\r\n                    {this.state.errorMessage}\r\n                  </div>\r\n                ):(<></>)\r\n              }\r\n              <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-input\">\r\n                      <input type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Username\" onChange={this.onChange}/>\r\n                  </div>\r\n                  <div className=\"form-input\">\r\n                      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n                  </div>\r\n                  <button type=\"submit\" name=\"submit\" value=\"LOGIN\" className=\"btn-login\">LOGIN</button>\r\n              </form>\r\n            </div>\r\n          )} \r\n        </div>\r\n      )\r\n    }\r\n}\r\n \r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\nimport { navItems } from '../ControlStaffView/ControlStraffView';\r\n\r\nclass NavBar extends Component {\r\n\r\n    createNavItems = _ => {\r\n        let items = [];\r\n        for(let i = 0; i < navItems.length; i++){\r\n            items.push(\r\n                <li key = {i}>\r\n                    {navItems[i]}\r\n                </li>\r\n            )\r\n        }\r\n        return items;\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"navbar bg-dark navbar-dark\">\r\n            <div className=\"Wrapper user\" onClick={()=>this.props.onClick('user')}>\r\n              <i className=\"fas fa-user-circle userIcon\"></i>\r\n              <div className=\"username\">\r\n                {this.props.username}\r\n              </div>\r\n            </div>\r\n              <div className=\"sperator\"></div>\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(this.props.items[0])}>\r\n                  <i className=\"fas fa-list-ul listIcon\"></i>\r\n                  <div className=\"nav-link\">{this.props.items[0]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(this.props.items[1])}>\r\n                  <i className=\"fas fa-plus plusIcon\"></i>\r\n                  <div className=\"nav-link\">{this.props.items[1]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\" onClick={()=>this.props.onClick(this.props.items[2])}>\r\n                  <i className=\"fas fa-file fileIcon\"></i>\r\n                  <div className=\"nav-link\">{this.props.items[2]}</div>\r\n                  <div className=\"underline\">\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <div className=\"logoutWrapper\">\r\n                <i className=\"fas fa-sign-out-alt logoutIcon\" onClick={this.props.logout}></i>\r\n                  <div className=\"logoutTag\">\r\n                    Logout\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\nimport HKTLogo from './HKT.png';\r\n\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected:'',\r\n            searchItem:'',\r\n            searchField:''\r\n        }\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.searchField);\r\n        console.log(e.target.name);\r\n    }\r\n\r\n    onBlur = e => {\r\n        e.target.value = '';\r\n        this.setState({\r\n            [e.target.name]:''\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"SearchBar\">\r\n            <img src={HKTLogo} alt=\"logo\" width=\"200px\" className=\"HKTLogo\"></img>\r\n            <input type=\"text\" className=\"textBar\" placeholder=\"Search...\" name={this.state.searchItem} onChange={this.onChange} onBlur={this.onBlur}></input>\r\n            <i className=\"fas fa-search searchIcon\"></i>\r\n            <select value={this.state.searchField} className=\"selectOrderFields\" onChange={this.onChange}>\r\n                <option value=\"Order#\">Order#</option>\r\n                <option value=\"BSN#\">BSN</option>\r\n                <option value=\"OrderStatus\">Status</option>\r\n                <option value=\"AD\">Assigning Date</option>\r\n                <option value=\"PVD\">Pre-visit Date</option>\r\n                <option value=\"WD\">Wiring Date</option>\r\n                <option value=\"team_id\">Team ID</option>\r\n            </select>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport './PageHeader.css';\r\n\r\nclass PageHeader extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"PageHeader\">\r\n                <h2 className=\"heading\">{this.props.pageName}</h2>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PageHeader;","import React, { Component } from 'react';\r\nimport './OrderList.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\n\r\n\r\nclass OrderList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: this.props.pageName\r\n        }\r\n    }\r\n\r\n    convertDateTime = date => {\r\n        let d = date.split('');\r\n        return d.slice(0,10);\r\n    }\r\n\r\n    AppendOrders = _ => {\r\n        let orders = this.props.orders;\r\n        let tr = [];\r\n        let td = [];\r\n        let j = this.props.totalOrders;\r\n        for(let i = 0; i < j; i++){\r\n            td.push(<td key={i+1*j}>{orders[i].order_number}</td>)\r\n            td.push(<td key={i+2*j}>{orders[i].order_status}</td>)\r\n            td.push(<td key={i+3*j}>{this.convertDateTime(orders[i].assigning_date)}</td>)\r\n            td.push(<td key={i+4*j}>{this.convertDateTime(orders[i].pre_visit_date)}</td>)\r\n            td.push(<td key={i+5*j}>{this.convertDateTime(orders[i].wiring_date)}</td>)\r\n            td.push(<td key={i+6*j}>{orders[i].team_id}</td>)\r\n            tr.push(<tr key={i+7*j}>{td}</tr>);    \r\n            td = [];\r\n        }\r\n        return tr;\r\n    } // end of method appendOrders\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"OrderList MainWrapper\">\r\n            <PageHeader pageName={this.state.pageName} />\r\n            <table border=\"1px\" className=\"table table-hover table-striped table-bordered orderTable\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>\r\n                            Order#\r\n                        </th>\r\n                        <th>\r\n                            Status\r\n                        </th>\r\n                        <th>\r\n                            Assigning Date\r\n                        </th>\r\n                        <th>\r\n                            Pre-Visit Date\r\n                        </th>\r\n                        <th>\r\n                            Wiring Date\r\n                        </th>\r\n                        <th>\r\n                            Team ID\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.AppendOrders()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default OrderList;","import React, { Component } from 'react';\r\nimport './ImportPage.css';\r\nimport PageHeader from '../../PageHeader/PageHeader';\r\n\r\nclass ImportPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: this.props.pageName\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"ImportPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ImportPage;","import React, { Component } from 'react';\r\nimport './QuotationPage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\n\r\nclass QuotationPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: this.props.pageName\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"QuotationPage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n                QuotationPage\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default QuotationPage;","import React, { Component } from 'react';\r\nimport './UserProfilePage.css';\r\nimport PageHeader from '../PageHeader/PageHeader';\r\n\r\n\r\nclass UserProfilePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: this.props.pageName\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"UserProfilePage MainWrapper\">\r\n                <PageHeader pageName={this.state.pageName} />\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\n\r\n\r\nexport default UserProfilePage;","import React, { Component } from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport OrderList from '../OrderList/OrderList';\r\nimport ImportPage from './ImportPage/ImportPage';\r\nimport QuotationPage from '../QuotationPage/QuotationPage';\r\nimport UserProfilePage from '../UserProfilePage/UserProfilePage';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { username } from '../LoginPage/LoginPage';\r\n\r\nexport const navItems = [\"Orders\", \"Import\", \"Quotations\"];\r\n\r\n\r\nclass ControlStaffView extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        items:['Order List', 'Import Order', 'Quotations'], // nav items\r\n        orders:[],\r\n        type: '',\r\n        username: username,\r\n        //username: this.props.location.state.username, // pass username to navbar\r\n        totalOrders: 0\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.setState({\r\n        type: this.state.items[0], // initialize to show order list first\r\n      });\r\n      console.log(this.state.username);\r\n      this.getOrders();\r\n    } \r\n\r\n    onClick = t =>{\r\n      this.setState({\r\n        type:t\r\n      })\r\n    } // change the existing type of the page\r\n\r\n    getOrders = _ => {\r\n      fetch('http://localhost:8080/orders')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response.data[0].order_number)\r\n          this.setState({\r\n            totalOrders: response.data.length,\r\n            orders: response.data\r\n          })\r\n        })\r\n        .catch(err => console.log(err))\r\n    } // get orders from db\r\n    \r\n    logout = _ => {\r\n      console.log(\"1222\")\r\n      this.setState({\r\n        logout:true\r\n      })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n          <div>\r\n            {this.state.username===''?<Redirect to={{pathname: `/`}}/>:\r\n              <>\r\n              <NavBar onClick={this.onClick} username={this.state.username} logout={this.logout} items={this.state.items}/>\r\n              <SearchBar />\r\n              {this.state.type === this.state.items[0]? <OrderList pageName={this.state.items[0]} totalOrders={this.state.totalOrders} orders={this.state.orders}/>:\r\n              this.state.type === this.state.items[1]? <ImportPage pageName={this.state.items[1]}/>:\r\n              this.state.type === this.state.items[2]? <QuotationPage pageName={this.state.items[2]}/>:<UserProfilePage pageName='User Profile'/>}\r\n              </>\r\n            }\r\n            {\r\n                this.state.logout===true?<Redirect to={{pathname: `/`}}/>:<></>\r\n              }\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default ControlStaffView;","import React, { Component } from 'react';\r\nimport './UploadPage.css';\r\nimport PageHeader from '../../PageHeader/PageHeader';\r\n\r\nclass UploadPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            pageName: this.props.pageName\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"UploadPage\">\r\n                <PageHeader pageName={this.state.pageName}/>\r\n                UploadPage\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default UploadPage;","import React, { Component } from 'react';\r\nimport QuotationPage from '../QuotationPage/QuotationPage';\r\nimport UploadPage from './UploadPage/UploadPage';\r\nimport UserProfilePage from '../UserProfilePage/UserProfilePage';\r\nimport OrderList from '../OrderList/OrderList';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport {Redirect} from 'react-router';\r\nimport { username } from '../LoginPage/LoginPage';\r\n\r\nclass EngineTeamView extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n       items:['Order List', 'Make Quotation', 'Quotations'], // nav items\r\n        orders:[],\r\n        type: '',\r\n        username: username, // pass username to navbar\r\n        totalOrders: 0,\r\n        logout:false\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.setState({\r\n        type: this.state.items[0], // initialize to show order list first\r\n      });\r\n      console.log(this.state.username);\r\n      this.getOrders();\r\n    }\r\n\r\n    getOrders = _ => {\r\n        fetch('http://localhost:8080/orders')\r\n          .then(response => response.json())\r\n          .then(response => this.setState({orders: response.data}))\r\n          .catch(err => console.log(err))\r\n    }\r\n\r\n    onClick = x =>{\r\n      this.setState({\r\n        type:x\r\n      })\r\n    }\r\n\r\n    logout = _ => {\r\n      console.log(\"1222\")\r\n      this.setState({\r\n        logout:true\r\n      })\r\n    }\r\n\r\n    render() { \r\n        // const { orders } = this.state;\r\n          return ( \r\n            <div>\r\n              {this.state.username===''?<Redirect to={{pathname: `/`}}/>:\r\n              <>\r\n              <NavBar onClick={this.onClick} username={this.state.username} items={this.state.items} logout={this.logout}/>\r\n              <SearchBar />\r\n              {this.state.type === this.state.items[0]? <OrderList pageName={this.state.items[0]}/>:\r\n              this.state.type === this.state.items[1]? <UploadPage pageName={this.state.items[1]}/>:\r\n              this.state.type === this.state.items[2]? <QuotationPage pageName={this.state.items[2]}/>: <UserProfilePage pageName='User Profile'/>}\r\n              </>\r\n              }\r\n              {\r\n                this.state.logout===true?<Redirect to={{pathname: `/`}}/>:<></>\r\n              }\r\n            </div> \r\n          );\r\n      }\r\n}\r\n \r\nexport default EngineTeamView;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport ControlStaffView from './components/ControlStaffView/ControlStraffView';\r\nimport EngineTeamView from './components/EngineTeamView/EngineTeamView';\r\n\r\n\r\nconst Routes = () => (\r\n\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={LoginPage}/>\r\n        <Route path='/LoginPage' component={LoginPage}/>\r\n        <Route path='/ControlStaffView' component={ControlStaffView}/>\r\n        <Route path='/EngineTeamView' component={EngineTeamView}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          <Routes />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}